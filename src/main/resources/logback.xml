<?xml version="1.0" encoding="UTF-8"?>

<!-- 从高到地低 OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 TRACE 、 ALL -->
<!-- 日志输出规则 根据当前ROOT 级别，日志输出时，级别高于root默认的级别时 会输出 -->
<!-- 以下 每个配置的 filter 是过滤掉输出文件里面，会出现高级别文件，依然出现低级别的日志信息，通过filter 过滤只记录本级别的日志 -->


<!-- 属性描述 scan：性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
	debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <contextName>d1money-web-ys-ems</contextName>

    <!-- 定义日志文件 输入位置 -->
    <property name="log_dir" value="logs/"/>
    <!-- 日志最大的历史 30天 -->
    <property name="maxHistory" value="30"/>
    <property name="maxFileSize" value="50MB"/>

    <!-- DEBUG级别日志 appender -->
    <appender name="DEBUG"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 过滤器，记录高于DEBUG级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>
                ${log_dir}/webservice.%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <!-- 日志最大的历史 60天 -->
            <maxHistory>${maxHistory}</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${maxFileSize}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--标准输出 appender -->
    <appender name="STDOUT"
              class="ch.qos.logback.core.ConsoleAppender">
        <!-- 过滤器，记录高于DEBUG级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <logger name="java.sql.PreparedStatement" value="DEBUG"/>
    <logger name="java.sql.Connection" value="DEBUG"/>
    <logger name="java.sql.Statement" value="DEBUG"/>
    <logger name="com.ibatis" value="DEBUG"/>
    <logger name="com.ibatis.common.jdbc.SimpleDataSource" value="DEBUG"/>
    <logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG"/>
    <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate"
            value="DEBUG"/>
    <logger name="com.apache.ibatis" level="TRACE"/>
    <logger name="com.pachira.boot.webservice" level="DEBUG"/>

    <!-- root级别 DEBUG -->
    <root level="info">
        <!-- 文件输出 -->
        <appender-ref ref="DEBUG"/>
        <appender-ref ref="STDOUT"/>
    </root>
</configuration>